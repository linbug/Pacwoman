int mapSize = 700, 
speed = 5, 
score = 0, 
numFood,
gridSize = 30;
float counter = 1;
Pac woman;
ArrayList foods;

void setup() {
  size(mapSize, mapSize);
  woman = new Pac (mapSize/2, mapSize/2, speed, gridSize/2);
  makeFoods();
}

void makeFoods() {
  foods = new ArrayList<Food>();
    for (int x = 0; x<width; x+= gridSize) {
    for (int y = 0; y< height; y+= gridSize) {
      if (random(10)<4) {
        foods.add(new Food(x, y));
      }
    }
  }


  /*for (int i=0; i<numFood; i++) {
   float x = random(width);
   float y = random(height);
   Food newFood = new Food(x, y);
   foods.add(newFood);*/
}


void draw() {
  noStroke();
  background(0);
  counter += 0.15;
  for (int i=0; i<foods.size(); i++) {
    Food myFood = (Food)foods.get(i);
    myFood.display();
  }
  woman.display();
  woman.move();
  checkIsFoodEaten();
  drawScore();
}

void drawScore() {
  if (foods.size() == 0) {
    text("You win!", width/2, height/2);
  } 
  else {
    text("Your score is " + score, width - 150, height - 50);
  }
}

void checkIsFoodEaten() {

  for (int i=0; i<foods.size(); i++) {
    Food myFood = (Food)foods.get(i);
    if (myFood.x < (woman.circleX + woman.circleWidth/4) && 
      myFood.x > (woman.circleX - woman.circleWidth/4) &&
      myFood.y < (woman.circleY + woman.circleWidth/4) && 
      myFood.y > (woman.circleY - woman.circleWidth/4)) {
      foods.remove(i);
      score++;
      break;
    }
  }
}
